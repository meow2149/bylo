!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).WebSocket={})}(this,(function(e){"use strict";var t;!function(e){e[e.PING=0]="PING",e[e.PONG=1]="PONG"}(t||(t={}));const o={heartbeatInterval:3e4,reconnectionDelay:5e3,timeout:5e3,debug:!1,messageFormat:"json"};e.WebSocket=class{#e;#t;#o=null;#s=!1;#i;#n;#a;constructor(e,t){this.#e={...o,...t},this.#t=e.replace(/^http/,"ws")}onopen=()=>{};onmessage=()=>{};onclose=()=>{};onerror=()=>{};send(e){if(this.#o?.readyState===WebSocket.OPEN)try{const t=JSON.stringify(e);if("json"===this.#e.messageFormat)this.#o.send(t);else{const e=new Blob([t],{type:"application/json"});this.#o.send(e)}this.#r("↑ Message sent:",e)}catch(e){this.#r("⚠ Message send failed:",e)}}close(){this.#r("✓ Manually closing connection"),this.#s=!0,this.#c()}connect(){this.#s=!1,this.#h()}#l=e=>{this.#r("✓ Connection established"),this.onopen(e),this.#b()};#d=async e=>{try{let o;if("json"===this.#e.messageFormat)o=e.data;else{const t=e.data;o=await t.text()}const s=JSON.parse(o);this.#r("↓ Message received:",s),s.type===t.PONG&&this.#n?this.#g():this.onmessage(new MessageEvent("message",{data:s}))}catch(e){this.#r("⚠ Message parsing failed:",e)}};#m=e=>{this.#r("✕ Connection closed"),this.#c(),this.onclose(e),this.#s||this.#p()};#u=e=>{this.#r("⚠ Connection error:",e),this.onerror(e)};#b=()=>{this.#T(),this.#o?.readyState===WebSocket.OPEN&&(this.#i=setInterval((()=>{this.send({type:t.PING}),this.#S()}),this.#e.heartbeatInterval))};#T=()=>{clearInterval(this.#i),this.#i=void 0};#S=()=>{this.#g(),this.#n=setTimeout((()=>{this.#r("⚠ Heartbeat timeout, closing connection"),this.#o?.close(),this.#g()}),this.#e.timeout)};#g=()=>{clearTimeout(this.#n),this.#n=void 0};#p=()=>{this.#f(),this.#a=setTimeout((()=>{this.#r("↻ Attempting to reconnect"),this.#h()}),this.#e.reconnectionDelay)};#f=()=>{clearTimeout(this.#a),this.#a=void 0};#h(){try{this.#c();const e=new WebSocket(this.#t);e.onopen=e=>this.#l(e),e.onmessage=e=>this.#d(e),e.onclose=e=>this.#m(e),e.onerror=e=>this.#u(e),this.#o=e}catch(e){this.#r("⚠ Connection failed:",e)}}#c=()=>{this.#T(),this.#f(),this.#g(),this.#o?.readyState===WebSocket.OPEN&&this.#o.close(),this.#o=null};#r=(...e)=>{if(this.#e.debug){const t=(new Date).toISOString();console.log(`%c[WebSocket][${t}]`,"background:#2c3e50;color:#e74c3c;padding:3px 6px;border-radius:3px;font-weight:bold;",...e)}}}}));
